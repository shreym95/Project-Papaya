{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "formula1factory"
		},
		"Formula1_DataLake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://wtf1dl.dfs.core.windows.net"
		},
		"Formula1 Trigger_properties_pipeline_parameters_window_end_date_global": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Formula1Databricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3131713074384682.2.azuredatabricks.net",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/a083ce97-bd37-41b7-9cb5-eac15fbce79e/resourceGroups/spark-test/providers/Microsoft.Databricks/workspaces/Formula1Analytics",
					"existingClusterId": "1106-082227-hl3dalgx"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Formula1_DataLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Formula1_DataLake_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Formula1_Dataset_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Formula1_DataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"window_end_date_dataset": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().window_end_date_dataset",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Formula1_DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/F1_Ingestion_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Formula1_Dataset_raw",
								"type": "DatasetReference",
								"parameters": {
									"window_end_date_dataset": {
										"value": "@formatDateTime(pipeline().parameters.window_end_date, 'yyyy-MM-dd')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get Metadata1').output.Exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ingest Circuits File",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Project-Papaya/ingestion/1. ingest_circuits_file",
										"baseParameters": {
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.window_end_date, 'yyyy-MM-dd')",
												"type": "Expression"
											},
											"data_source": {
												"value": "@variables('data_source_global')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Formula1Databricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingest Races File",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Project-Papaya/ingestion/2. ingest_races_file",
										"baseParameters": {
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.window_end_date, 'yyyy-MM-dd')",
												"type": "Expression"
											},
											"data_source": {
												"value": "@variables('data_source_global')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Formula1Databricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingest Constructors File",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Project-Papaya/ingestion/3. ingest_constructors_file",
										"baseParameters": {
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.window_end_date, 'yyyy-MM-dd')",
												"type": "Expression"
											},
											"data_source": {
												"value": "@variables('data_source_global')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Formula1Databricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingest Drivers File",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Project-Papaya/ingestion/4. ingest_drivers_file",
										"baseParameters": {
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.window_end_date, 'yyyy-MM-dd')",
												"type": "Expression"
											},
											"data_source": {
												"value": "@variables('data_source_global')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Formula1Databricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingest Results File",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Project-Papaya/ingestion/5. ingest_results_file",
										"baseParameters": {
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.window_end_date, 'yyyy-MM-dd')",
												"type": "Expression"
											},
											"data_source": {
												"value": "@variables('data_source_global')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Formula1Databricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingest Pit Stops File",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Project-Papaya/ingestion/6. ingest_pit_stops_file",
										"baseParameters": {
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.window_end_date, 'yyyy-MM-dd')",
												"type": "Expression"
											},
											"data_source": {
												"value": "@variables('data_source_global')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Formula1Databricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingest Lap Times File",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Project-Papaya/ingestion/7. ingest_lap_times_file",
										"baseParameters": {
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.window_end_date, 'yyyy-MM-dd')",
												"type": "Expression"
											},
											"data_source": {
												"value": "@variables('data_source_global')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Formula1Databricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingest Qualifying File",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Project-Papaya/ingestion/8. ingest_qualifying_file",
										"baseParameters": {
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.window_end_date, 'yyyy-MM-dd')",
												"type": "Expression"
											},
											"data_source": {
												"value": "@variables('data_source_global')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Formula1Databricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"window_end_date": {
						"type": "string"
					}
				},
				"variables": {
					"data_source_global": {
						"type": "String",
						"defaultValue": "Ergast API"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Formula1_Dataset_raw')]",
				"[concat(variables('factoryId'), '/linkedServices/Formula1Databricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/F1_Transformation_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Formula1_Dataset_raw",
								"type": "DatasetReference",
								"parameters": {
									"window_end_date_dataset": {
										"value": "@formatDateTime(pipeline().parameters.window_end_date, 'yyyy-MM-dd')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get Metadata1').output.Exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Transform Race Results",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Project-Papaya/presentation/1.race_results",
										"baseParameters": {
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.window_end_date, 'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Formula1Databricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Transform Driver Standing",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Transform Race Results",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Project-Papaya/presentation/2.driver_standings",
										"baseParameters": {
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.window_end_date, 'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Formula1Databricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Transform Constructor Standings",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Transform Race Results",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Project-Papaya/presentation/3.constructor_standings",
										"baseParameters": {
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.window_end_date, 'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Formula1Databricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Transform Calculated Race Results",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Project-Papaya/presentation/4.calculated_race_results",
										"baseParameters": {
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.window_end_date, 'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Formula1Databricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"window_end_date": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Formula1_Dataset_raw')]",
				"[concat(variables('factoryId'), '/linkedServices/Formula1Databricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Formula 1 Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1 for Ingestion",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "F1_Ingestion_Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"window_end_date": {
									"value": "@pipeline().parameters.window_end_date_global",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Pipeline2 for Transformations",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1 for Ingestion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "F1_Transformation_Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"window_end_date": {
									"value": "@pipeline().parameters.window_end_date_global",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"window_end_date_global": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/F1_Ingestion_Pipeline')]",
				"[concat(variables('factoryId'), '/pipelines/F1_Transformation_Pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Formula1 Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "Formula 1 Pipeline",
						"type": "PipelineReference"
					},
					"parameters": {
						"window_end_date_global": "[parameters('Formula1 Trigger_properties_pipeline_parameters_window_end_date_global')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 168,
					"startTime": "2021-03-11T22:00:00Z",
					"endTime": "2021-04-25T22:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Formula 1 Pipeline')]"
			]
		}
	]
}